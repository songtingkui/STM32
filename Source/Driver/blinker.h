/*********************************************************************************************************
* 模块名称：blinker.h
* 
* 摘    要：点灯科技接口协议分解
* 
* 当前版本：1.0.0
* 
* 作    者：ZLGCX(COPYRIGHT 2021 - 2030 ZLGCX. All rights reserved.)
* 
* 完成日期：2021年05月11日 
* 
* 内    容：
*			
* 注    意：1、仅支持4种接口协议
*			2、使用全局缓冲，必须串口数据包接收完整后进行
*			
**********************************************************************************************************
* 取代版本：
* 
* 作    者： 
* 
* 完成日期：
* 
* 修改内容：
* 
* 修改文件：
*********************************************************************************************************/
#if     _MSC_VER > 1000
#pragma once
#endif

#ifndef __BLINKER_H
#define __BLINKER_H

#ifdef __cplusplus
extern "C" {
#endif
	
	
/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "pwm.h"

/*********************************************************************************************************
*                                              宏定义
*********************************************************************************************************/
#define LED_BRIGH_MAX		255ul						// LED亮度调节最大值
#define LED_COLOR_MAX		255ul						// LED颜色深度最大值

#define WW_PWM_PULSE		PWM_PULSE					// 照明亮度下，PWM周期内最大脉冲数（为PWM脉冲的比例0 ~ 1倍）
#define R_PWM_PULSE			PWM_PULSE					// 红光亮度下，PWM周期内最大脉冲数
#define G_PWM_PULSE			PWM_PULSE					// 绿光亮度下，PWM周期内最大脉冲数
#define B_PWM_PULSE			PWM_PULSE					// 蓝光亮度下，PWM周期内最大脉冲数

/*********************************************************************************************************
*                                              枚举结构体定义
*********************************************************************************************************/
typedef struct
{
	uint32_t HeartTick;		// 心跳包同步时间

	uint32_t led_switch;	// LED灯开关状态：0关，1开
	uint32_t led_mode;		// LED灯开关状态：0WW，1RGB
		
	uint32_t wwBright;		// 照明光亮度
	uint32_t wwBrightTick;	// 照明亮度修改时间
	uint32_t iSwwChange;	// 照明亮度修改否
		
	uint32_t r_value;		// 红光亮度
	uint32_t g_value;		// 红光亮度
	uint32_t b_value;		// 红光亮度
	uint32_t bright_value;	// 红光亮度
} BLINKER_DataDef;

extern BLINKER_DataDef	g_strBlinkerData;				// LED控制状态数据
extern uint32_t Ledchose;
/*********************************************************************************************************
*                                              API函数声明
*********************************************************************************************************/
void BlinkerInitialize(void);							// 点灯科技APP接口初始化
void BlinkerProcess(void);								// 点灯科技APP数据流处理

void BlinkAdjustBright(void);							// 循环调整灯光亮度
void BlinkAdjustBright2(void);
void BlinkToggleLed(void);								// 开关LED灯

void BlinkColorchose(void);

#ifdef  __cplusplus
}
#endif

#endif  /* __BLINKER_H */
